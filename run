#!/usr/bin/env python3
import argparse
import os
import sys
from dazpycheck.main import main, run_tests

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="A tool to check and validate a Python code repository.")
    subparsers = parser.add_subparsers(dest="command")

    # Check command
    check_parser = subparsers.add_parser("check", help="Check and validate the code.")
    check_parser.add_argument("--readonly", action="store_true", help="Only check for issues, don't modify files.")
    check_parser.add_argument("--single-thread", action="store_true", help="Run checks sequentially.")
    check_parser.add_argument("directory", nargs="?", default=".", help="The directory to check (default: current directory).")

    # Test command
    test_parser = subparsers.add_parser("test", help="Run all tests in the repository.")
    test_parser.add_argument("directory", nargs="?", default=".", help="The directory to run tests in (default: current directory).")

    args = parser.parse_args()

    if args.command == "check":
        sys.exit(main(args.directory, not args.readonly, args.single_thread))
    elif args.command == "test":
        output_dir = "output"
        test_project_dir = os.path.join(output_dir, "test_project")
        if not os.path.exists(output_dir):
            os.makedirs(output_dir)
        if not os.path.exists(test_project_dir):
            os.makedirs(test_project_dir)
        # You can create test files here for more comprehensive testing
        sys.exit(run_tests(args.directory))
    else:
        parser.print_help()
        sys.exit(1)
